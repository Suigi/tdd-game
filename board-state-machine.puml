@startuml

state "What Should It Do?" as what
state "How Will You Know It Did It?" as how
state "Write Code For Test" as for_test
state "Write Code For Feature" as for_feature
state "Predict Test Will Fail to Compile" as predict_fail_compile
state "Write Code So Test Compiles" as test_compiles
state "Predict Test Will Fail" as predict_test_fail
state "Predict Test Now Passes" as predict_test_passes
state "Commit Code" as commit_code

[*] --> what : Join Game
what --> how : Discard Any Action Card
how --> for_test : Discard Any Action Card

for_test --> for_feature : Add 3 Cycle Risk
for_test --> predict_fail_compile : Play WRITE CODE card

state predict_fail_compile {
    predict_fail_compile --> for_feature : Add 2 Cycle Risk
    [*] -> WaitForPredict2
    WaitForPredict2 --> WaitForPredict2 : Play LESS CODE card
    WaitForPredict2 --> WaitForTestResults2 : Play PREDICT card
    WaitForTestResults2 --> test_compiles : Prediction Successful\n(discard all in-play cards)
    WaitForTestResults2 --> WaitForPredict2 : Prediction Fails\n(discard PREDICT card)
}

test_compiles --> for_feature : Add 1 Cycle Risk
test_compiles --> predict_test_fail : Play WRITE CODE card

state predict_test_fail {
    [*] -> WaitForPredict4
    WaitForPredict4 --> WaitForPredict4 : Play LESS CODE card
    WaitForPredict4 --> WaitForTestResults4 : Play PREDICT card
    WaitForTestResults4 --> for_feature : Prediction Successful\n(discard all in-play cards)
    WaitForTestResults4 --> WaitForPredict4 : Prediction Fails\n(discard PREDICT card)
}

for_feature -> predict_test_passes : Play WRITE CODE card

state predict_test_passes {
    [*] -> WaitForPredict5
    WaitForPredict5 --> WaitForPredict5 : Play LESS CODE card
    WaitForPredict5 --> WaitForTestResults5 : Play PREDICT card
    WaitForTestResults5 --> commit_code : Prediction Successful\n(discard all in-play cards)
    WaitForTestResults5 --> WaitForPredict5 : Prediction Fails\n(discard PREDICT card)
}

state evaluate_risk <<choice>>

commit_code --> what : No Risk\n(discard entire hand)\nAdd 1 to Commit Points
commit_code --> evaluate_risk : Have Risk

evaluate_risk --> what : [roll <= RISK]\nREVERT and start over
evaluate_risk --> what : [roll > RISK]\nAdd 1 to Commit Points

@enduml